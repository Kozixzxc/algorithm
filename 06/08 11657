import java.util.*;

class Edge {

    int to, cost;

    Edge(int to, int cost) {

        this.to = to;

        this.cost = cost;

    }

}

public class Main {

    static final int inf = 1000000000;

    public static void main(String args[]) {

        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();

        int m = sc.nextInt();

        ArrayList<Edge>[] a = (ArrayList<Edge>[]) new ArrayList[n+1];

        int[] dist = new int[n+1];

        boolean[] check = new boolean[n+1];

        int[] cnt = new int[n+1];

        for (int i=1; i<=n; i++) {

            a[i] = new ArrayList<Edge>();

        }

        for (int i=0; i<m; i++) {

            int from = sc.nextInt();

            int to = sc.nextInt();

            int cost = sc.nextInt();

            a[from].add(new Edge(to, cost));

        }

        for (int i=1; i<=n; i++) {

            dist[i] = inf;

        }

        dist[1] = 0;

        Queue<Integer> q = new LinkedList<>();;

        q.add(1);

        check[1] = true;

        while (!q.isEmpty()) {

            int from = q.remove();

            check[from] = false;

            for (Edge e : a[from]) {

                int to = e.to;

                int cost = e.cost;

                if (dist[to] > dist[from] + cost) {

                    dist[to] = dist[from] + cost;

                    if (check[to] == false) {

                        q.add(to);

                        check[to] = true;

                        cnt[to] += 1;

                        if (cnt[to] >= n) {

                            System.out.println(-1);

                            System.exit(0);

                        }

                    }

                }

            }

        }

        for (int i=2; i<=n; i++) {

            if (dist[i] == inf) {

                System.out.println(-1);

            } else {

                System.out.println(dist[i]);

            }

        }

    }

}
