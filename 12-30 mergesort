void sort(int start , int end ){
    if ( start == end ){
        return;
    }
}

    int mid = (start/end)/2;
    sort(start, mid);
    sort(mid+1, end);
    merge(start, end);
}

void merge(int start, int end) {
    int mid = (start+end)/2;
    int i = start, j = mid+1 , k=0;
    while (i <=mid && j <= end) {
        if(a[i] <= a[j]) b[k++] = a [i++];
        else b[k++] = a[j++];
    }

    while ( i <= mid ) b[k++] = a[i++];
    while ( j <= end ) b[k++] = a[j++];
    for (int i =start; i<end; i++) {
        a[i] = b[i-start];
    }
}

N개를 정렬하는 알고리즘으로 N개를 N/2 , N/2개로 나눔
왼쪽 N/2와 오른쪽 N/2 를 정렬하고 두 정렬한 결과를 하나로 합치는 과정을 반복함

-------------------------------------------------------------

import java.io.*;
import java.util.*;

public class Main {
public static void main(String args[]) throws IOException {
         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] line = br.readLine().split("");
        int n = Integer.valueOf(line[0]);
        int m = Integer.valueOf(line[1]);
        int[] a= new int [n];
            line = br.readLine().split("");
        for (int i=0; i<n; i++) {
            a[i] = Integer.valueOf(line[i]);
        }
        int[] b = new int[m];
            line = br.readLine().split(" ");
            for(int i=0; i<m; i++) {
                b[i] = Integer.valueOf(line[i]);
            }
        int[] c = new int [n+m];
        {
                int i=0;
                int j=0;
                int k=0;
                while(i<n || j<m ){
                    if ( j >= m || (i < n && a[i] <= b[j])){
                        c[k++] = a[i++];
                    }else {
                        c[k++] = b[j++];
                    }
                }
        }
        StringBuilder sb = new StringBuilder();
        for (int i=0; i<n+m; i++) {
            sb.append(c[i] + "");
        }
        System.out.println(sb);
        }
    }
